-
    const adTypes = [
        "graphic-textual",
        "in-feed",
        "in-article"
    ];
    let adCount = {};
    for (let i = 0; i < adTypes.length; i++) {
        adCount[adTypes[i]] = 0;
    }
    let adSlots = {};
    //- graphic-textual
    adSlots[adTypes[0]] = [
        1642693276
    ];
    //- in-feed
    adSlots[adTypes[1]] = [
        
    ];
    //- in-article
    adSlots[adTypes[2]] = [
        2848674174,
        1795091730,
        6631296078
    ];

//- Adds an ad unit to the page.
    @param {String} adType the type of ad to display.
mixin ad(adType)
    -
        if (adTypes.includes(adType)) {
            adCount[adType]++;
        } else {
            throw new Error("Unknown type of ad " + adType + ".");
        }
        if (adCount[adType] > adSlots[adType].length) {
            throw new Error("Insufficient amount of " + adType + " ad slots.");
        }
    if environment === "production"
        div.ad
            case adType
                when adTypes[0]
                    +adGraphicTextual()
                when adTypes[1]
                    +adInFeed()
                when adTypes[2]
                    +adInArticle()
    else
        hr
        span Ad unit of type #{adType} here.
        hr

//- Pushes the previously added ad to the AdSense script.
mixin pushAd()
    script. 
        (adsbygoogle = window.adsbygoogle || []).push({});

mixin adGraphicTextual()
    ins.adsbygoogle(
        style="display:block"
        data-ad-client="#{Site.auth().googleAdSense}"
        data-ad-slot="#{adSlots[adTypes[0]][adCount[adTypes[0]] - 1]}"
        data-ad-format="auto"
    )
    +pushAd()

mixin adInFeed()
    -throw new Error("Unsupported ad type.");
    +pushAd()

mixin adInArticle()
    ins.adsbygoogle(
        style="display:block; text-align:center;"
        data-ad-layout="in-article"
        data-ad-format="fluid"
        data-ad-client="#{Site.auth().googleAdSense}"
        data-ad-slot="#{adSlots[adTypes[2]][adCount[adTypes[2]] - 1]}"
    )
    +pushAd()