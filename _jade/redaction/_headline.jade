include /_jade/base/_functions

-var documentContents = [];

-
    /**
     * Pushes a headline in the structure of the table of contents.
     * @param {Object} headline the headline to push. 
     */
    function pushHeadline(headline) {
        if (documentContents.length < 1) {
            documentContents.push(headline);
        } else if (headline.level === documentContents[documentContents.length - 1].level) {
            documentContents.push(headline);
        } else {
            let previousHeadline = documentContents[documentContents.length - 1];
            addHeadline(previousHeadline, headline);
        }
    }

    /**
     * Recursively traverses the structure of the table of contents to add the 
     * headline.
     * @param {Object} previousHeadline the previous headline in the hierarchy.
     * @param {Object} headline the headline to add recursively.
     */
    function addHeadline(previousHeadline, headline) {
        if (previousHeadline.headlines.length < 1) {
            previousHeadline.headlines.push(headline);
        } else {
            let headlines = previousHeadline.headlines;
            let lastHeadline = headlines[headlines.length - 1];
            if (headline.level === lastHeadline.level) {
                headlines.push(headline);
            } else {
                addHeadline(lastHeadline, headline);
            }
        }
    }

    /**
     * Returns the localized title of the table of contents based on the 
     * locale of the current document.
     */
    function fetchTableOfContentsHeader() {
        let variables = fetchCurrentLocaleVariables();
        if (variables.modules && variables.modules.tableOfContents) {
            return variables.modules.tableOfContents;
        } else {
            console.warn(
                "Warning: Could not fetch the header " 
                + "variables.modules.tableOfContents of the table of contents " 
                + "in the locale variables for " + getCurrentRelativePath()
            );
        }
    }

//- Adds an anchor to the headline.
mixin heading(headline)
    if headline
        a(href!='#' + slugify(headline) id!=slugify(headline)): i.fa.fa-link
        !=headline

//- Displays and identifies a headline.
    Should not be used as an inline mixin.
    Since the headline is passed as a Javascript parameter,
    it is subject to escaped characters.
mixin h(level, headline)
    if !level && !headline
        -console.error("Error: Undefined heading @" + current.path);
    else if !level && headline
        -console.error("Error: Undefined heading level \"" + headline + "\"@" + current.path);
    else if level && !headline
        -console.error("Error: Undefined headline of level " + level + "@" + current.path);
    else
        case level
            when 1
                h1.heading: +heading(headline)
            when 2
                h2.heading: +heading(headline)
            when 3
                h3.heading: +heading(headline)
            when 4
                h4.heading: +heading(headline)
            when 5
                h5.heading: +heading(headline)
            when 6
                h6.heading: +heading(headline)
            default
                -console.error("Error: Invalid headline level " + level + ' "' + headline + '" at ' + getCurrentRelativePath())
        -
            pushHeadline({
                id: slugify(headline), 
                headline: headline, 
                level: level, 
                headlines: []
            });

//- Adds the table of contents of the current document. Must be used at the
    end of all headline declarations, as the script retains the mixin call 
    order.
mixin tableOfContents() 
    -
        console.log(JSON.stringify(documentContents, true, '\t'))
    if documentContents && documentContents.length > 0
        section#table-of-contents
            nav
                header!=fetchTableOfContentsHeader()
                +listTableOfContents(documentContents)

//- Recursively lists the elements of the table of contents given the root from
    which to start.
mixin listTableOfContents(root)
    ol
        each content in root
            li: a(href!='#' + content.id)!=content.headline
            if content.headlines && content.headlines.length > 0
                +listTableOfContents(content.headlines)
